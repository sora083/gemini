buildscript {
    ext {
        springBootVersion = '2.5.6'
        flywayVersion = '8.0.2'
        JUnitVersion = '5.3.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

plugins {
    id 'java'
    id 'io.spring.dependency-management' version "1.0.11.RELEASE"
    id 'org.springframework.boot' version "$springBootVersion"
    id 'org.flywaydb.flyway'version "$flywayVersion"
    id 'com.github.sherter.google-java-format' version '0.9'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'com.github.sherter.google-java-format'

repositories {
    mavenCentral()
}

group = 'com.sora.proto'
version = '0.0.1-SNAPSHOT'
description = 'gemini'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-devtools:$springBootVersion"
    implementation "org.flywaydb:flyway-core:$flywayVersion"
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'mysql:mysql-connector-java:8.0.25'
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$JUnitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$JUnitVersion"
}

test {
    useJUnitPlatform {

    }
}

googleJavaFormat {
    source = sourceSets*.allJava
    include '**/*.java'
}

wrapper { gradleVersion = '7.2' }

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        cacheChangingModulesFor 0, 'seconds'
        force 'org.apiguardian:apiguardian-api:1.1.0'
        force 'org.opentest4j:opentest4j:1.2.0'
    }
}